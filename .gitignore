# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/


/sentiment_analysis/LSTM/normal_sentiment_anal.pt
/sentiment_analysis/Transformers/params_of_bert_recursive.txt
/sentiment_analysis/LSTM/lstm_sentiment_analysis.pt
/sentiment_analysis/Transformers/transformer_sentiment_analysis_model.pt
/sentiment_analysis/Transformers/main_*
/sentiment_analysis/__pycache__
/sentiment_analysis/LSTM/__pycache__
/sentiment_analysis/Transformers/__pycache__
/sentiment_analysis/Transformers/jobs
/sentiment_analysis/LSTM/jobs
/sentiment_analysis/Transformers/test_model.py
/sentiment_analysis/LSTM/test_model.py
/sentiment_analysis/Transformer/.data
/sentiment_analysis/LSTM/.data
/sentiment_analysis/LSTM/.vector_cache
/sentiment_analysis/LSTM/imdb
sentiment_analysis/Transformers/.data/
/named_entity_recognition/Transformer/__pycache__
/named_entity_recognition/LSTM/__pycache__
/named_entity_recognition/LSTM_2/__pycache__
/named_entity_recognition/__pycache__
/natural_language_inference/Transformer/test_model.py
named_entity_recognition/dataset/imdb/
natural_language_inference/LSTM/.data/
natural_language_inference/LSTM/.vector_cache/
natural_language_inference/LSTM/__pycache__/
natural_language_inference/Transformer/__pycache__/
natural_language_inference/Transformer/snli_1.0.zip
natural_language_inference/Transformer/__pycache__/
natural_language_inference/__pycache__/
natural_language_inference/Transformer/snli_1.0/
natural_language_inference/Transformer/__MACOSX/
question_answering/Transformer/__pycache__/
question_answering/Transformer/dataset/__init__.py
question_answering/Transformer/dataset/__pycache__/
question_answering/Transformer/dataset/cached_features/
question_answering/Transformer/layers.txt
question_answering/Transformer/predictions/
question_answering/Transformer/test.py
question_answering/Transformer/test.py
question_answering/__pycache__/
natural_language_inference/log_dp.txt
question_answering/test_suit/__pycache__/
pos_tagging/Transformer/__pycache__/
pos_tagging/__pycache__/
pos_tagging/LSTM/__pycache__/
log_dp.txt
pos_tagging/LSTM/.vector_cache/
.idea
pos_tagging/dataset/
/ukp-storage-1/senge/final_repo/dp-across-nlp-tasks/datasets/SNLI/snli_1.0_train3.csv
